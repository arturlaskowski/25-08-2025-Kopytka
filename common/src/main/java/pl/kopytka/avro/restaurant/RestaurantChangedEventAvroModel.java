/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package pl.kopytka.avro.restaurant;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RestaurantChangedEventAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 979111405024933394L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestaurantChangedEventAvroModel\",\"namespace\":\"pl.kopytka.avro.restaurant\",\"fields\":[{\"name\":\"restaurantId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"available\",\"type\":\"boolean\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"products\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RestaurantProduct\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"available\",\"type\":\"boolean\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<RestaurantChangedEventAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RestaurantChangedEventAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RestaurantChangedEventAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RestaurantChangedEventAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RestaurantChangedEventAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RestaurantChangedEventAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RestaurantChangedEventAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RestaurantChangedEventAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RestaurantChangedEventAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID restaurantId;
  private java.lang.String name;
  private boolean available;
  private int version;
  private java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> products;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RestaurantChangedEventAvroModel() {}

  /**
   * All-args constructor.
   * @param restaurantId The new value for restaurantId
   * @param name The new value for name
   * @param available The new value for available
   * @param version The new value for version
   * @param products The new value for products
   */
  public RestaurantChangedEventAvroModel(java.util.UUID restaurantId, java.lang.String name, java.lang.Boolean available, java.lang.Integer version, java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> products) {
    this.restaurantId = restaurantId;
    this.name = name;
    this.available = available;
    this.version = version;
    this.products = products;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return restaurantId;
    case 1: return name;
    case 2: return available;
    case 3: return version;
    case 4: return products;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: restaurantId = (java.util.UUID)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: available = (java.lang.Boolean)value$; break;
    case 3: version = (java.lang.Integer)value$; break;
    case 4: products = (java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'restaurantId' field.
   * @return The value of the 'restaurantId' field.
   */
  public java.util.UUID getRestaurantId() {
    return restaurantId;
  }


  /**
   * Sets the value of the 'restaurantId' field.
   * @param value the value to set.
   */
  public void setRestaurantId(java.util.UUID value) {
    this.restaurantId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'available' field.
   * @return The value of the 'available' field.
   */
  public boolean getAvailable() {
    return available;
  }


  /**
   * Sets the value of the 'available' field.
   * @param value the value to set.
   */
  public void setAvailable(boolean value) {
    this.available = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public int getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(int value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'products' field.
   * @return The value of the 'products' field.
   */
  public java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> getProducts() {
    return products;
  }


  /**
   * Sets the value of the 'products' field.
   * @param value the value to set.
   */
  public void setProducts(java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> value) {
    this.products = value;
  }

  /**
   * Creates a new RestaurantChangedEventAvroModel RecordBuilder.
   * @return A new RestaurantChangedEventAvroModel RecordBuilder
   */
  public static pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder newBuilder() {
    return new pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder();
  }

  /**
   * Creates a new RestaurantChangedEventAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RestaurantChangedEventAvroModel RecordBuilder
   */
  public static pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder newBuilder(pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder other) {
    if (other == null) {
      return new pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder();
    } else {
      return new pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new RestaurantChangedEventAvroModel RecordBuilder by copying an existing RestaurantChangedEventAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new RestaurantChangedEventAvroModel RecordBuilder
   */
  public static pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder newBuilder(pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel other) {
    if (other == null) {
      return new pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder();
    } else {
      return new pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for RestaurantChangedEventAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RestaurantChangedEventAvroModel>
    implements org.apache.avro.data.RecordBuilder<RestaurantChangedEventAvroModel> {

    private java.util.UUID restaurantId;
    private java.lang.String name;
    private boolean available;
    private int version;
    private java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> products;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[0].schema(), other.restaurantId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.available)) {
        this.available = data().deepCopy(fields()[2].schema(), other.available);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.products)) {
        this.products = data().deepCopy(fields()[4].schema(), other.products);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing RestaurantChangedEventAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[0].schema(), other.restaurantId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.available)) {
        this.available = data().deepCopy(fields()[2].schema(), other.available);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.products)) {
        this.products = data().deepCopy(fields()[4].schema(), other.products);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'restaurantId' field.
      * @return The value.
      */
    public java.util.UUID getRestaurantId() {
      return restaurantId;
    }


    /**
      * Sets the value of the 'restaurantId' field.
      * @param value The value of 'restaurantId'.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder setRestaurantId(java.util.UUID value) {
      validate(fields()[0], value);
      this.restaurantId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'restaurantId' field has been set.
      * @return True if the 'restaurantId' field has been set, false otherwise.
      */
    public boolean hasRestaurantId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'restaurantId' field.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder clearRestaurantId() {
      restaurantId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'available' field.
      * @return The value.
      */
    public boolean getAvailable() {
      return available;
    }


    /**
      * Sets the value of the 'available' field.
      * @param value The value of 'available'.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder setAvailable(boolean value) {
      validate(fields()[2], value);
      this.available = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'available' field has been set.
      * @return True if the 'available' field has been set, false otherwise.
      */
    public boolean hasAvailable() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'available' field.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder clearAvailable() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public int getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder setVersion(int value) {
      validate(fields()[3], value);
      this.version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder clearVersion() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'products' field.
      * @return The value.
      */
    public java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> getProducts() {
      return products;
    }


    /**
      * Sets the value of the 'products' field.
      * @param value The value of 'products'.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder setProducts(java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct> value) {
      validate(fields()[4], value);
      this.products = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'products' field has been set.
      * @return True if the 'products' field has been set, false otherwise.
      */
    public boolean hasProducts() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'products' field.
      * @return This builder.
      */
    public pl.kopytka.avro.restaurant.RestaurantChangedEventAvroModel.Builder clearProducts() {
      products = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RestaurantChangedEventAvroModel build() {
      try {
        RestaurantChangedEventAvroModel record = new RestaurantChangedEventAvroModel();
        record.restaurantId = fieldSetFlags()[0] ? this.restaurantId : (java.util.UUID) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.available = fieldSetFlags()[2] ? this.available : (java.lang.Boolean) defaultValue(fields()[2]);
        record.version = fieldSetFlags()[3] ? this.version : (java.lang.Integer) defaultValue(fields()[3]);
        record.products = fieldSetFlags()[4] ? this.products : (java.util.List<pl.kopytka.avro.restaurant.RestaurantProduct>) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RestaurantChangedEventAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<RestaurantChangedEventAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RestaurantChangedEventAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<RestaurantChangedEventAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










